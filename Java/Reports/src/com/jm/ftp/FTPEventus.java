package com.jm.ftp;

import java.io.File;
import com.olf.openjvs.OException;
import com.olf.openjvs.Ref;
import com.olf.openjvs.SystemUtil;
import com.olf.openjvs.Table;
import com.openlink.util.constrepository.ConstRepository;
import com.olf.jm.logging.Logging;

/**
 * @author GanapP02
 * 
 * Description:			This script sends file generated by report builder report over SFTP.
 * 
 * Revision History: 
 * 2021-010-20	V1.0	Prashanth	EPI-1940	WO0000000117265	-Initial version
 *  
 */

public class FTPEventus extends FTP {
	
	private final String CR_VAR_SEND_TEXT_FILE = "SendTestFile";
	private final String CR_VAR_EVENTUS_POST = "Eventus_port";
	private final String CR_VAR_EVENTUS_USER = "Eventus_user";
	private final String CR_VAR_EVENTUS_IP = "Eventus_IP";
	private final String CR_VAR_PROD_DB = "ProdDatabase";
	private final String CR_VAR_TARGET_FOLDER = "TargetFolder";
	private final String CR_VAR_PASSWORD = "Password";
	private final String CR_VAR_DONE_FILE_NAME = "DoneFileName";
	private String reportDate = "";
	
	public FTPEventus(ConstRepository _repository, String reportDate) throws Exception {

		super(_repository);
		this.reportDate = reportDate;
		strIPAddress = repository.getStringValue(CR_VAR_EVENTUS_IP);
		String prodDB = repository.getStringValue(CR_VAR_PROD_DB);
		String sendTestFile = repository.getStringValue(CR_VAR_SEND_TEXT_FILE);
		if (strIPAddress == null || strIPAddress.isEmpty() || strIPAddress.equals("")) {
			Logging.info("IP address not found from const repository");
			throw new Exception("IP address not found from const repository.");
		}

		if (!Ref.getInfo().getString("database", 1).equals(prodDB)) {
			//Eventus has single IP address for UAT and Test hence check is based on User_const_repo value
			if (!"Yes".equals(sendTestFile)) {
				String message = "Communicate to Eventus before sending test file and update user_const_repository";
				Logging.info(message);
				throw new Exception(message);
			}
		}
	}

	public void put(String qualifiedFileName) throws Exception {

		try {
			String eventusUser = repository.getStringValue(CR_VAR_EVENTUS_USER);
			String ipPort = repository.getStringValue(CR_VAR_EVENTUS_POST);
			String password = repository.getStringValue(CR_VAR_PASSWORD);
			String doneFileName = repository.getStringValue(CR_VAR_DONE_FILE_NAME);
			
			String filePath = qualifiedFileName.substring(0, qualifiedFileName.lastIndexOf("\\"));
			String qualifiedDoneFileName = filePath + "\\" + doneFileName;
			File doneFile = new File(qualifiedDoneFileName);
			doneFile.createNewFile();
			
			String open = "\"open sftp://" + eventusUser + ":" + password + "@" + strIPAddress + ":" + ipPort + " -hostkey=* \" ";
			String upload = "\"cd " + getRemoteFolderName(reportDate) + " \" ";
			upload += "\" put " + qualifiedFileName + "  \" ";
			upload += "\" put " + qualifiedDoneFileName + "  \" ";
			String exit = "\"close\" \"exit\"";

			String wnSCPCmd = "/command " + open + upload + exit;

			Logging.info("before running command put");
			Logging.info(strWinSCPExePath + " " + strWinSCPLogPath + " " + wnSCPCmd.replace(password, "***"));
			SystemUtil.createProcess(strWinSCPExePath + " " + strWinSCPLogPath + " " + wnSCPCmd, -1);

			if (doneFile.exists()) {
				doneFile.delete();
			}

		} catch (Exception e) {
			Logging.info("Caught exception " + e.getMessage());
			throw e;
		}

		Logging.info("after running command put");

	}

	private String getRemoteFolderName(String reportDate) throws OException {
		
		String remoteFolderName = repository.getStringValue(CR_VAR_TARGET_FOLDER);
		remoteFolderName = remoteFolderName.replace("YYYY", reportDate.substring(0,4));
		remoteFolderName = remoteFolderName.replace("MM", reportDate.substring(4,6));
		remoteFolderName = remoteFolderName.replace("DD", reportDate.substring(6,8));
				
		return remoteFolderName;
	}

	@Override
	public void get(Table tlbFileNames) throws Exception {
		
	}
}

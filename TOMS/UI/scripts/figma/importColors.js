require('dotenv').config();

const fs = require('fs');
const path = require('path');
const prettier = require('prettier');
const { setWith } = require('lodash');
const { assert } = require('console');
const { extractStyles, getStylePath, request } = require('./helpers');

const OUTPUT_FILE = path.join(__dirname, '../../src/styles/theme/colors.ts');
const FILE_ID = process.env.FIGMA_FILE_KEY;
const NODE_ID = process.env.FIGMA_FILE_NODE_ID;

assert(FILE_ID, 'Figma file ID not found');
assert(NODE_ID, 'Figma file node IDs not found');

const colors = {};

/**
 * Converts figma fill object to an RGBA string
 */
function fillToColorString(fill) {
  const rgb = `${Math.round(fill.color.r * 255)}, ${Math.round(
    fill.color.g * 255
  )}, ${Math.round(fill.color.b * 255)}`;
  if (fill.opacity) {
    return `rgba(${rgb}, ${fill.opacity.toFixed(2)})`;
  } else {
    return `rgb(${rgb})`;
  }
}

function extractFill(child, fileStyles) {
  const styleId = child.styles?.fill || child.styles?.fills;
  const style = fileStyles[styleId];

  if (!style) {
    return;
  }

  const fill = child.fills[0];
  let color;

  switch (fill.type) {
    case 'SOLID': {
      color = fillToColorString(fill);
      break;
    }
    default: {
      break;
    }
  }

  if (color) {
    setWith(colors, getStylePath(style), color, Object);
  }
}

async function start() {
  const res = await request(
    `files/${FILE_ID}/nodes?ids=${encodeURIComponent(NODE_ID)}`
  );
  const { document, styles } = res.nodes[decodeURIComponent(NODE_ID)];

  extractStyles(document, styles, ['fill', 'fills'], extractFill);

  const output = `  /**
 These styles are automatically imported from Figma
 Do not edit this file directly.
**/

  export const colors = ${JSON.stringify(colors, null, 2)}
  `;

  prettier
    .resolveConfig(fs.readFileSync('.prettierrc', 'utf8'))
    .then((config) => {
      fs.writeFileSync(
        OUTPUT_FILE,
        prettier.format(output, { ...config, parser: 'babel' }),
        'utf-8'
      );
    });
}

start()
  .catch(console.error)
  .then(() => {
    console.log('Styles imported successfully');
  });

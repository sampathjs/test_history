# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true

logging.level.root=INFO

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

spring.liquibase.default-schema=DBO

spring.datasource.url=jdbc:h2:mem:testdb;MODE=MSSQLServer;INIT=CREATE SCHEMA IF NOT EXISTS DBO
spring.jpa.show-sql=true
spring.jpa.hibernate.format_sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.hibernate.ddl-auto=none

spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.trace=false
spring.h2.console.settings.web-allow-others=true

#spring.mvc.static-path-pattern=/resources/**

spring.liquibase.change-log=classpath:/db/changelog/db.changelog-test-master.xml

saml.metadataUrl=http://www.okta.com/exk3ydkvacERO92ZY5d7
saml.idp=http://www.okta.com/exk3ydkvacERO92ZY5d7

okta.oauth2.issuer=https://dev-34809749.okta.com/oauth2/default
okta.oauth2.client-id=0oa4020mehIgW4a9A5d7
okta.oauth2.client-secret=uonNvXKrCQb7uKUp-MO3rL94qRI-Bb7CT2m3raDv

#spring.security.oauth2.client.registration.oktaClientServiceUser.client-id=0oa3wubzkvWwESST35d7
#spring.security.oauth2.client.registration.oktaClientServiceUser.client-secret=AoF7oHdZKBPp2TzEiUAoXjjjIFUfyxg4XRwCavS-
#spring.security.oauth2.client.registration.oktaClientServiceUser.authorization-grant-type=client_credentials
#spring.security.oauth2.client.registration.oktaClientServiceUser.scope=
#spring.security.oauth2.client.provider.oktaClientServiceUser.token-uri=https://dev-34809749.okta.com/oauth2/default/v1/token

spring.security.oauth2.client.registration.oktaClientServiceUser.client-id=0oa4020mehIgW4a9A5d7
spring.security.oauth2.client.registration.oktaClientServiceUser.client-secret=uonNvXKrCQb7uKUp-MO3rL94qRI-Bb7CT2m3raDv
spring.security.oauth2.client.registration.oktaClientServiceUser.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.oktaClientServiceUser.scope=
spring.security.oauth2.client.provider.oktaClientServiceUser.token-uri=https://dev-34809749.okta.com/oauth2/default/v1/token


spring.security.oauth2.client.registration.oktaClientManualUser.client-id=0oa4020mehIgW4a9A5d7
spring.security.oauth2.client.registration.oktaClientManualUser.client-secret=uonNvXKrCQb7uKUp-MO3rL94qRI-Bb7CT2m3raDv
spring.security.oauth2.client.registration.oktaClientManualUser.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.oktaClientManualUser.scope=openid, profile
spring.security.oauth2.client.registration.oktaClientManualUser.redirect-uri-template=http://localhost:8080/login/oauth2/code/okta
spring.security.oauth2.client.provider.oktaClientManualUser.issuer-uri=https://dev-34809749.okta.com/oauth2/default
spring.security.oauth2.client.provider.oktaClientManualUser.user-info-uri=https://dev-34809749.okta.com/oauth2/default/v1/userinfo
spring.security.oauth2.client.provider.oktaClientManualUser.jwk-set-uri=https://dev-34809749.okta.com/oauth2/default/v1/keys

# URL pointing to the Service Connector instance to be used to communicate with other TOMS services
service.connector.url=http://localhost:8080
USE [DBA]
GO
/****** Object:  StoredProcedure [AppSupport].[Missing_User_JM_trading_pnl_history]    Script Date: 25/07/2018 10:26:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROC [AppSupport].[Missing_User_JM_trading_pnl_history] (@debug TINYINT = 0,@threshold INT = 1000, @email_address  varchar(1000) = 'stephen.hindmarsh@matthey.com;')
AS 
BEGIN
SET NOCOUNT ON
DECLARE @rowcnt INT

-- Dynamic SQL to pick up the correct database name for cross-server deployment
-- Works only if there is a database beginning with "OLEM" on the DB Server
-- If no such database is found, the query runs for the prod database "OLEME00P"

DECLARE @db_name varchar(20)
declare @sql_stmt nvarchar(4000)

-- Top 1 as test/dev DB servers have multiple databases
-- If no such databases found, use the PROD DB name

SELECT TOP 1 @db_name = ISNULL(name,'OLEME00P')
FROM sys.databases
WHERE name like 'olem%'


SET @sql_stmt = 'select @rowcnt = COUNT(*) FROM [' + @db_name + '].[dbo].[user_jm_trading_pnl_history]'

EXEC sp_executesql @sql_stmt

PRINT @rowcnt

IF @rowcnt < @threshold

BEGIN
 
DECLARE @email_subject NVARCHAR(100)
DECLARE @email_query   NVARCHAR(2000)
DECLARE @profile_name SYSNAME
--DECLARE @email_address VARCHAR(500)

SET @email_subject = 'Error - Potentially missing rows in user_jm_trading_pnl_history'
  
SET @email_query = 'SELECT COUNT(*) AS RowsInTable FROM [' + @db_name + '].[dbo].[user_jm_trading_pnl_history]'

SELECT  @profile_name = name FROM msdb.dbo.sysmail_profile WHERE profile_id = 1

IF @debug = 0 
BEGIN

 EXEC msdb.dbo.sp_send_dbmail   
@profile_name = @profile_name,
@recipients = @email_address,
@subject = @email_subject,
@query = @email_query,
@importance = 'HIGH',
@attach_query_result_as_file = 1

RAISERROR ('MissingData from user_jm_trading_pnl_history',16,1) 
RETURN(1)
END

END


END